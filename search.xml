<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>0-1背包</title>
      <link href="/0-1-bei-bao/"/>
      <url>/0-1-bei-bao/</url>
      
        <content type="html"><![CDATA[<p>背包问题是本科时候竞赛经常遇到的一个问题，包括0-1背包、完全背包问题、多重背包问题，今天正好准备算法期末考试，就此机会回忆一下0-1背包问题。</p><h2 id="0-1-背包问题"><a href="#0-1-背包问题" class="headerlink" title="0-1 背包问题"></a>0-1 背包问题</h2><h3 id="1、问题描述"><a href="#1、问题描述" class="headerlink" title="1、问题描述"></a>1、问题描述</h3><blockquote> 有N件物品，和一个容量为V的背包，第i件物品的费用是c[i]，价值是w[i],问将哪些物品装入背包可使价值总和最大。<br>注意：这是最基本的背包问题，特点就是每件物品仅有意见，可以选择放还是不放</blockquote><h3 id="2、状态转移方程"><a href="#2、状态转移方程" class="headerlink" title="2、状态转移方程"></a>2、状态转移方程</h3><blockquote>f[i][v] = max{f[i-1][v],f[i-1][v-c[i]] + w[i]<br>含义就是：将前i件物品放入容量为v的背包中可获得的最大价值</blockquote><p><strong>基本所有的背包问题都是由这个方程演变过来的。</strong><br>这个方程可以这样来理解：将前 i 件物品放入容量为 v 的背包中”这个子问题，若只考虑第 i个物品的策略（放或不放），那么就可以转化为一个只牵扯前i-1件物品的问题。</p><ul><li><strong>如果不放第i件物品</strong>：那么问题就转化为“前 i-1 件物 品放入容量为 v 的背包中”，价值为 f[i-1][v]；</li><li><strong>如果放第i件物品</strong>：那么问题就转化为“前 i-1 件物品放入剩下的容量为 v-c[i]的背包中”，此时能获得的最大价值就是 f[i-1][v-c[i]]再加上通过放入第 i 件物品获得的价值w[i]。<br><code>请注意：</code><br>在最优解的背包问题中，事实上有两种不太相同的问法，一种是要求“恰好装满背包时”的最优解，有的则是没有要求必须将背包装满，区别这种问法的实现方法就是在初始化的时候有所不同。</li><li><strong>第一种：</strong>要求恰好装满背包，那么在初始化时除了 f[0]为 0 其它 f[1..V]均设为 -∞。</li><li><strong>第二种：</strong>没要求恰好装满背包，只希望价格大，初始化时应该f[1..V]均设为0。</li></ul><h3 id="3、实例"><a href="#3、实例" class="headerlink" title="3、实例"></a>3、实例</h3><p><strong>问题描述：</strong> 已知知道了N块石头的体积和价值，有一个最多能装体积为V的石头的袋子，从N块石头中找出一些石头放在袋子里使得总价值最大，求出最大价值。</p><pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span>using namespace std<span class="token punctuation">;</span><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;string.h></span></span><span class="token keyword">struct</span> A<span class="token punctuation">{</span>    <span class="token keyword">int</span> val<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//价值</span>    <span class="token keyword">int</span> v<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//体积</span><span class="token punctuation">}</span>E<span class="token punctuation">[</span><span class="token number">1011</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> a<span class="token operator">></span>b<span class="token operator">?</span>a<span class="token punctuation">:</span>b<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> T<span class="token punctuation">;</span>    <span class="token keyword">int</span> dp<span class="token punctuation">[</span><span class="token number">1011</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> N<span class="token punctuation">,</span>V<span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>T<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>T<span class="token operator">--</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>N<span class="token punctuation">,</span><span class="token operator">&amp;</span>V<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>N<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>E<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>N<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>E<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">memset</span><span class="token punctuation">(</span>dp<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//如果这里问的是问恰好装满背包，则不能这样初始化。</span>        <span class="token keyword">for</span><span class="token punctuation">(</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>N<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token operator">=</span>V<span class="token punctuation">;</span>l<span class="token operator">>=</span>E<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>v<span class="token punctuation">;</span>l<span class="token operator">--</span><span class="token punctuation">)</span>                dp<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>l<span class="token operator">-</span>E<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>v<span class="token operator">+</span>E<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>val<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            cout<span class="token operator">&lt;&lt;</span>dp<span class="token punctuation">[</span>V<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 0-1背包 </tag>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回归博客</title>
      <link href="/hui-gui-bo-ke/"/>
      <url>/hui-gui-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>这是我正式搭建好博客之后自己写的第一篇文章，因为最近事情比较多，帮老师写专利，调代码，准备期末考试，但是还是在百忙之中，抽取了一丁点的时间，按照热心网友给出的模板，自己搭了一个简单的博客，也了却了我的的一桩心事。</p><h2 id="正式回归博客啦！！！"><a href="#正式回归博客啦！！！" class="headerlink" title="正式回归博客啦！！！"></a>正式回归博客啦！！！</h2><hr><h3 id="1、源头"><a href="#1、源头" class="headerlink" title="1、源头"></a>1、源头</h3><p>大二的时候，松哥就跟我说着要搭建一个属于自己的技术博客，当时的时候，开始喜欢编程，接触Java,还有各种Web编程，确实知识点比较多，也比较松散，word，思维导图各种笔记都曾记过，也使用过很多的云笔记，微软的OneNote，印象笔记，有道云等到处都留下了我的印记，但是终究不能带来最佳的体验效果。</p><p>上了研究生之后，看的文献越来越多，接触的编程语言也越来越多，各种框架层出不穷，用有道云来做简单的论文笔记勉强还是过得去，但是看起来也不是很方便，尤其是在手机端，总是有种似曾相识，但是还是得上网百度。为此，<a href="https://blog.csdn.net/HaoTheAnswer" target="_blank" rel="noopener">CSDN</a>上我也会经常用来收藏很多网上大牛的文章，但是其排版又过于丑陋，而且有些文章有时还会给你删除，很烦躁。目前市面上也就只有博客园和简书在这方面做的比较好，但是终归不是属于自己的，所以说，想法是早就有，总是一拖再拖。</p><p>终于，实验室小雨姐姐给他推荐了他的博客，我就上了她的博客来看看，确实效果还是挺不错的，上面看到了她姐姐的一个<a href="http://ariel-cheng.github.io/2017/04/23/Internship-experience/" target="_blank" rel="noopener">实习总结</a>，拥有自己的博客不管是对自己还是对别人来说都是百利而无一害的。 所以，花了两天时间，先学会了在github的各种使用，然后开始基于Hexo来建立自己的博客，在阿里云注册了一个域名，然后就搭起来了。</p><h3 id="2、近期计划"><a href="#2、近期计划" class="headerlink" title="2、近期计划"></a>2、近期计划</h3><p>近期可能事情比较多，所以不天可能将所有以前的笔记啥的都移植到现在这个博客上，所以打算就是利用寒假的时间，将大学四年和研一上半年的所有笔记进行一个整理，能做多少就做多少吧，总体的思路还是想分为几个大的模块：</p><h4 id="2-1-编程"><a href="#2-1-编程" class="headerlink" title="2.1 编程"></a>2.1 编程</h4><p>这方面主要涉及自己学过的几门语言，Java，C/C++，Python语言，主要重点是现在接触的比较多的Python语言，还有一些热门的框架，像Pytorch，TensorFlow、MXNet等等，因为这些知识点很零散，也不是说一下子就能够全部碰到。最重要的，也是很容易忘记的，可能就是一些核心的算法，像本科学习的一些算法， 现在接触的有关ML、DL、CV的算法，这些也应该被当做是学习的重点，所以肯定会是一个长期的过程。</p><h4 id="2-2-论文"><a href="#2-2-论文" class="headerlink" title="2.2 论文"></a>2.2 论文</h4><p>这个方面自然是不用说了，每周都有专门的汇报工作，每周自己也会看一些论文的，这在研一上半年就做了，后期将会将相关的论文笔记进行一个整理，进行上传。</p><h4 id="2-3-项目"><a href="#2-3-项目" class="headerlink" title="2.3 项目"></a>2.3 项目</h4><p>这个方面是自己的薄弱的环节，本科做的项目不多，就那么三四个，后期修改后会将他们传到github上，当然包括自己毕业设计做的东西。研究生的话， 目前是想将平时自己做过的实验进行上传，包括超分辨率和目标检测相关的一些项目，我想，这对自己以后面试工作肯定也会是有用的吧，虽然还没有确定是继续深造还是研究生后就找工作。</p><h4 id="2-3-课程"><a href="#2-3-课程" class="headerlink" title="2.3 课程"></a>2.3 课程</h4><p>这方面，主要想记录的就是自己现在长期接触的，像机器学习，深度学习，数学的相关知识，当然也会包括自己平时看英语的一些总结吧。至于本科相关的课程，我只会选择性碰到了才会去记录一下，不太可能将他们再一一上传了。</p><h4 id="2-4-随笔"><a href="#2-4-随笔" class="headerlink" title="2.4 随笔"></a>2.4 随笔</h4><p>这个就是要看自己的心情了，大学之前，自己都一直有写日记的习惯，反倒是社交软件多了之后，反而很少写了，也就是偶尔会在空间里写写日志，毕竟有些私密性的东西，，，对吧！！不过这个我还在想，应该会设置一个权限，应该是有办法解决的。每一个开心和不开心的瞬间以后都会在这里一一呈现的。</p><h3 id="3、未来。。。"><a href="#3、未来。。。" class="headerlink" title="3、未来。。。"></a>3、未来。。。</h3><p>未来有点远，没想太多，，，想到了再来补充吧~~</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好 Hexo</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! 这是我的第一篇文章。检查<a href="https://hexo.io/docs/" target="_blank" rel="noopener">文献</a>会得到更多的信息。 如果你在使用Hexo的过程中遇到任何的问题，你可以在<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a>中去寻找答案，也可以在<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>论坛中咨询。</p><h2 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h2><h3 id="1、创建一个请求"><a href="#1、创建一个请求" class="headerlink" title="1、创建一个请求"></a>1、创建一个请求</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更多信息: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="2、运行服务器"><a href="#2、运行服务器" class="headerlink" title="2、运行服务器"></a>2、运行服务器</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更多信息: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="3、产生静态文件"><a href="#3、产生静态文件" class="headerlink" title="3、产生静态文件"></a>3、产生静态文件</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更多信息: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="4、部署到远程库"><a href="#4、部署到远程库" class="headerlink" title="4、部署到远程库"></a>4、部署到远程库</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更多信息: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
